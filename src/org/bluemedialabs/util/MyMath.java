/*
 * Copyright 2008 blue media labs ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.bluemedialabs.util;

import java.util.Random;


/**
 * Some math functions beyond those found in {@link java.lang.Math}.
 *
 * @author J. Marco Bremer
 * @version 1.0
 */
public final class MyMath {
	/**
	 * log_2(2).
	 */
	static public final double LOG_2 = java.lang.Math.log(2);

	static private Random rand = new Random();


	/**
	 * Calculates two to the power of the given double value.
	 */
	static public double exp2(double d) {
		return java.lang.Math.pow(2.0, d);
	}

	// add a faster exp2 for pure integers and exponents <=32/64
	// using bit manipulation (or maybe even a precomputed array)


	/**
	 * Calculates the base 2-logarithm for the given double value.
	 *
	 * @param d The double to calculate the 2-logarithm for.
	 * @returns The logarithm for base 2 for the given double value.
	 */
	static public double log2(double d) {
		return (java.lang.Math.log(d) / LOG_2);
	}


	static public long fac(int n) {
		if (n == 0) {
			return 1;
		} else {
			return (n * fac(n - 1));
		}
	}

	/**
	 * Adjusts the seed value for the random numbers generated by random().
	 *
	 * @param seed The seed value for the random number generation.
	 */
	static public void setSeed(long seed) {
		rand = new Random(seed);
	}

	/**
	 * Generates a random integer in the given range including the given
	 * values.
	 *
	 * @param from The minimum generated random integer.
	 * @param to The maximum generated random integer.
	 * @return A random integer in the specified range.
	 */
	static public int random(int from, int to) {
		return (int) Math.round(from + rand.nextDouble() * (to - from));
	}

	static public double random(double from, double to) {
		return (from + rand.nextDouble() * (to - from));
	}

	static public float random(float from, float to) {
		return (from + rand.nextFloat() * (to - from));
	}


	/**
	 * Private constructor to make sure nobody is instantiating this class.
	 */
	private MyMath() {}

}